{"version":3,"sources":["Components/SearchCategory.jsx","Components/GifCardItem.jsx","helpers/getGifs.js","Components/GifCard.jsx","hooks/useFetchGifs.js","GifExpertApp.jsx","index.js"],"names":["SearchCCategory","setcategory","useState","input","setInput","Container","onSubmit","e","preventDefault","trim","length","cast","className","type","value","onChange","target","placeholder","GifCardItem","title","url","Row","xs","md","CardGroup","Card","Img","src","alt","ImgOverlay","Title","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifCard","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","Spinner","animation","variant","GifExpertApp","series","setSeries","serie","ReactDOM","render","document","getElementById"],"mappings":"oLA6CeA,MApCf,YAA2C,IAAhBC,EAAe,EAAfA,YACvB,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OACI,mCAEA,cAACC,EAAA,EAAD,UACA,sBAAMC,SAbW,SAACC,GAClBA,EAAEC,iBAEEL,EAAMM,OAAOC,OAAS,IACtBT,GAAY,SAAAU,GAAI,OAAKR,GAAL,mBAAeQ,OAC/BP,EAAS,MAQb,SACgB,uBAAOQ,UAAU,oBAAoBC,KAAK,OACtCC,MAAOX,EACPY,SApBE,SAACR,GACvBH,EAASG,EAAES,OAAOF,QAoBEG,YAAY,kB,+BC/BzB,SAASC,EAAT,GAAsC,IAAfC,EAAc,EAAdA,MAAOC,EAAO,EAAPA,IAC3C,OACE,cAACf,EAAA,EAAD,CAAWO,UAAU,QAArB,SACA,cAACS,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGX,UAAU,MAA7B,SACI,cAACY,EAAA,EAAD,UACA,eAACC,EAAA,EAAD,CAAMb,UAAU,uDAAhB,UACE,cAACa,EAAA,EAAKC,IAAN,CAAUC,IAAKP,EAAKQ,IAAI,eACxB,cAACH,EAAA,EAAKI,WAAN,UACE,cAACJ,EAAA,EAAKK,MAAN,UAAaX,e,6BCVZY,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbb,EADa,0FAC0Ec,UAAUF,GADpF,sBAEAG,MAAMf,GAFN,cAEbgB,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRvB,MAAOsB,EAAItB,MACXC,IAAG,UAAEqB,EAAIE,cAAN,aAAE,EAAYC,iBAAiBxB,QATvB,kBAaZmB,GAbY,4CAAH,sD,QCIL,SAASM,EAAT,GAA8B,IAAZb,EAAW,EAAXA,SAE9B,ECHyB,SAACA,GACzB,MAA0B9B,mBAAS,CAC/BoC,KAAK,GACLQ,SAAQ,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAqBA,OAhBAC,qBAAU,WACNlB,EAAQC,GACPkB,MAAK,SAAAC,GAEFC,YAAW,WACPJ,EAAS,CACLV,KAAKa,EACLL,SAAQ,MAGb,UAIT,CAACd,IAEIe,EDnBqBM,CAAarB,GAA9BW,EAAZ,EAAOL,KAAYQ,EAAnB,EAAmBA,QAClB,OACI,gCACI,oBAAIlC,UAAW,mCAAf,SAAmDoB,IAE9Dc,GAAW,cAACQ,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,YAI5Bb,EAAOH,KAAI,SAAAC,GAAG,OACZ,cAACvB,EAAD,eAEIuB,GADCA,EAAIC,UEWhBe,MAzBf,WAEI,MAA4BvD,mBAAS,CAAC,cAAtC,mBAAOwD,EAAP,KAAeC,EAAf,KAED,OACC,sBAAK/C,UAAU,eAAf,UACE,oBAAIA,UAAU,mBAAd,0BACA,cAAC,EAAD,CAAiBX,YAAa0D,IAC9B,uBACJ,6BAEQD,EAAOlB,KAAK,SAACoB,GACT,OACM,cAACf,EAAD,CAECb,SAAU4B,GADNA,YCZzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e017225c.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { Container } from \"react-bootstrap\";\r\n\r\n\r\nSearchCCategory.propTypes = {\r\n    setcategory: PropTypes.func.isRequired\r\n}\r\n\r\nfunction SearchCCategory({ setcategory }) {\r\n    const [input, setInput] = useState('');\r\n\r\n    const handleChangeInput = (e) => {\r\n        setInput(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (input.trim().length > 2) {\r\n            setcategory(cast => [input, ...cast]);\r\n            setInput('');\r\n\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n\r\n        <Container>\r\n        <form onSubmit={handleSubmit}>\r\n                        <input className=\"form-control mx-3\" type=\"text\"\r\n                            value={input}\r\n                            onChange={handleChangeInput}\r\n                            placeholder=\"BUSCAR\" />\r\n            </form>\r\n\r\n        </Container>\r\n\r\n            \r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SearchCCategory;","import React from \"react\";\r\nimport { Container, Card, CardGroup,Row } from \"react-bootstrap\";\r\nexport default function GifCardItem({ title, url }) {\r\n  return (\r\n    <Container className=\"my-5 \">\r\n    <Row xs={1} md={2} className=\"g-4\">\r\n        <CardGroup>\r\n        <Card className=\"animate__animated animate__bounce bg-dark text-white\">\r\n          <Card.Img src={url} alt=\"Card image\" />\r\n          <Card.ImgOverlay>\r\n            <Card.Title>{title}</Card.Title>\r\n          </Card.ImgOverlay>\r\n        </Card>\r\n      </CardGroup>\r\n\r\n    </Row>\r\n   \r\n        </Container>\r\n  );\r\n}\r\n","export const getGifs = async(category) => {\r\n    const url=`https://api.giphy.com/v1/gifs/search?api_key=J8ikLWdsslj4JStmkr3durtdVFZRMPZf&q=${encodeURI(category)}&limit=10`\r\n    const resp = await fetch(url)\r\n    const {data} = await resp.json() \r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}\r\n","import GifCardItem from './GifCardItem'\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\"\r\nimport Spinner from 'react-bootstrap/Spinner'\r\n\r\nexport default function GifCard({category}) {\r\n  \r\n   const {data:images,loading}= useFetchGifs(category);\r\n    return (\r\n        <div>\r\n            <h1 className= \"animate__animated animate__flash\">{category}</h1>\r\n\r\n{loading && <Spinner animation=\"border\" variant=\"primary\" /> }\r\n\r\n            \r\n                {\r\n                    images.map(img => (\r\n                      <GifCardItem\r\n                      key={img.id}\r\n                      {...img}\r\n\r\n                       />\r\n                    ))  // images.map\r\n                }\r\n        \r\n        </div>\r\n    )\r\n}\r\n","import {useState,useEffect} from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category)=>{\r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading:true\r\n    });    \r\n\r\n    useEffect(()=>{\r\n        getGifs(category)\r\n        .then(imgs=>{\r\n\r\n            setTimeout(() => {\r\n                setstate({\r\n                    data:imgs,\r\n                    loading:false\r\n                })      \r\n\r\n            }, 3000);\r\n\r\n          \r\n        })\r\n    },[category])\r\n    \r\n    return state\r\n}","import {useState} from 'react'\r\nimport SearchCCategory from './Components/SearchCategory';\r\nimport GifCard from './Components/GifCard';\r\nfunction GifExpertApp() {\r\n \r\n    const [series, setSeries] = useState([\"One Piece\"])\r\n\r\n   return (\r\n    <div className=\"GifExpertApp\">\r\n      <h2 className=\"text-center mt-1\">GifExpertApp</h2>\r\n      <SearchCCategory setcategory={setSeries}/>\r\n      <hr/>\r\n  <ol>\r\n      {\r\n          series.map( (serie) =>{\r\n              return (\r\n                    <GifCard\r\n                    key={serie}\r\n                     category={serie}/>\r\n                 \r\n              )\r\n          })\r\n      }\r\n  </ol>  \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\n\nReactDOM.render(\n  <GifExpertApp/>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}